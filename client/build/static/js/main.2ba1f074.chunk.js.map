{"version":3,"sources":["components/Navbar.js","components/Home.js","components/Transfer.js","components/Loading.js","components/Customer.js","components/Transaction.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","id","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","Home","Transfer","name","value","useState","from","amount","user","setUser","history","useHistory","handleInputs","e","target","data","setData","getCustomer","a","fetch","method","headers","res","json","messageData","console","log","useEffect","TransferData","preventDefault","body","JSON","stringify","then","tsdata","status","window","alert","push","defaultValue","onChange","disabled","map","_id","autoComplete","placeholder","onClick","Loading","locationOptions","loop","autoplay","animationData","location","rendererSettings","preserveAspectRatio","options","height","width","Customer","loading","setLoading","scope","data-title","phone","email","accountno","ifscno","accountbalance","Transaction","getTransactions","transactions","item","date","Date","toLocaleString","year","month","day","timeZone","hour12","hour","minute","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ba1f074.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { NavLink } from 'react-router-dom';\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <nav id=\"myNavbar\" className=\"navbar navbar-expand-lg navbar-light bg-light sticky-top\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\">Bank System</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"nav navbar-nav ml-auto text-center\">\r\n              <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\r\n                <NavLink className=\"nav-link\" to=\"/\">Home</NavLink>\r\n              </li>\r\n              <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\r\n                <NavLink className=\"nav-link\" to=\"/customer\">Customers</NavLink>\r\n              </li>\r\n              <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\r\n                <NavLink className=\"nav-link\" to=\"/transaction\">Transactions</NavLink>\r\n              </li>\r\n              <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\r\n                <NavLink className=\"nav-link\" to=\"/transfer\">Transfer</NavLink>\r\n              </li>\r\n             \r\n\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport '../App.css'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n        <div className=\"home-page\">\r\n        <div className=\"home-div\">\r\n            <p className=\"h5\">Welcome </p>\r\n            <h1>To Our Banking System</h1>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState,useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nconst Transfer = () => {\r\n    const [user, setUser] = useState({ from: null, to: null, amount: \"\" });\r\n    \r\n    const history = useHistory();\r\n    let name;\r\n    let value;\r\n    const handleInputs = (e) => {\r\n        name = e.target.name;\r\n        value = e.target.value;\r\n        setUser({ ...user, [name]: value });\r\n    }\r\n    const [data, setData] = useState();\r\n    const getCustomer = async () => {\r\n        try {\r\n            const res = await fetch('/customer', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            });\r\n            const messageData = await res.json();\r\n            setData(messageData);\r\n\r\n\r\n\r\n        } catch (e) {\r\n\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        getCustomer()\r\n      }, [])\r\n   \r\n    const TransferData = async (e) => {\r\n        e.preventDefault();\r\n        const { from, to, amount } = user;\r\n\r\n        const res = await fetch('/transfer',\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    from: from, to: to, amount: amount\r\n                })\r\n\r\n\r\n            }).then((res)=> res.json())\r\n            .then((tsdata)=>{\r\n                if (tsdata.status === 500) {\r\n                    window.alert('Trafer not successfull');\r\n                }\r\n                else  if (amount === 0 || to === null || from===null) {\r\n                    alert('Please fill the all data')\r\n                    history.push('/transfer')\r\n                }\r\n                else if(from===to)\r\n                {\r\n                    alert('Receiver Name must be diffferent')\r\n                    history.push('/transfer')\r\n                }\r\n                else{\r\n                    window.alert(\"Transfer Successfull\");\r\n                    history.push('/transaction')\r\n                }\r\n        \r\n            }); \r\n             \r\n        \r\n    }\r\n    return (\r\n        <>\r\n\r\n            <div className=\"d-flex  justify-content-center align-items-center transfer-form\">\r\n                <ul className=\"list-group p-3 mx-auto text-center\" >\r\n                    <li className=\"list-group-item text-center \" >\r\n                        <div className=\"row\">\r\n                            <div className=\"col-auto\">\r\n                                <div className=\"d-flex justify-content-center align-items-center font-weight-bold  \">\r\n                                    <div className=\"h2 text-center box text-uppercase\" >Transfer</div>\r\n                                </div>\r\n                                <form className=\"d-flex justify-content-center align-items-center flex-column\" method=\"POST\">\r\n                                \r\n                                    <select className=\"mt-3 \" defaultValue='DEFAULT' id=\"from\" name='from' onChange={handleInputs}>\r\n                                        <option value='DEFAULT' disabled>\r\n                                            - Select a Sender -\r\n                                        </option>\r\n                                        {data?.map(data => (\r\n                                            <option key={data._id} value={user.from}>\r\n                                                {data.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                    {/* <input type=\"text\" name=\"from\" id=\"from\" autoComplete=\"off\"\r\n                                        value={user.from}\r\n                                        onChange={handleInputs}\r\n                                        placeholder=\"Enter Sender Name\"\r\n                                    /> */}\r\n                                    {/* <input className=\"text-capitalize\" type=\"text\" name=\"to\" id=\"to\" autoComplete=\"off\"\r\n                                        placeholder=\"Enter Receiver Name\"\r\n                                        value={user.to}\r\n                                        onChange={handleInputs}\r\n                                        style={{ textTransform: \"capitalize\" }} /> */}\r\n                                       \r\n                                    <select className=\"mt-3\" defaultValue='DEFAULT' id=\"to\" name='to' onChange={handleInputs}>\r\n                                        <option value='DEFAULT' disabled>\r\n                                            - Select a Receiver -\r\n                                        </option>\r\n                                        {data?.map(data => (\r\n                                            <option id=\"cust_name\" key={data._id} value={user.to}>\r\n                                                {data.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    <input className=\"mt-4\" type=\"number\" name=\"amount\" id=\"amount\" autoComplete=\"off\"\r\n                                        placeholder=\"Enter Amount\"\r\n                                        value={user.amount}\r\n                                        onChange={handleInputs} />\r\n                                    \r\n                                    <button type=\"submit\" onClick={TransferData}>Proceed</button>\r\n                                   \r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </ul></div>\r\n               \r\n        </>\r\n    )\r\n}\r\nexport default Transfer;","import React from 'react'\r\nimport '../App.css'\r\nimport Lottie from 'react-lottie';\r\nimport * as location from '../1055-world-locations.json'\r\nimport * as success from '../17084-sucess-confetti.json'\r\nfunction Loading() {\r\n    const locationOptions = {\r\n        loop: true,\r\n        autoplay: true, \r\n        animationData: location.default,\r\n        rendererSettings: {\r\n          preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n      }\r\n      const successOptions = {\r\n        loop: true,\r\n        autoplay: true, \r\n        animationData: success.default,\r\n        rendererSettings: {\r\n          preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n      };\r\n    return (\r\n        <>\r\n        <div className=\"Loading\">\r\n        <p className=\"text-center text-white\">Loading...</p>\r\n            <Lottie  className=\"mybox\" options={locationOptions}\r\n              height={200}\r\n              width={200} \r\n             />  \r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React, {  useEffect, useState } from 'react'\r\nimport Loading from './Loading';\r\nimport '../index.css'\r\nconst Customer = () => {\r\n\r\n    const [data, setData] = useState();\r\n    const [loading,setLoading]=useState(false);\r\n    const getCustomer = async () => {\r\n        try {\r\n            const res = await fetch('/customer', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            }).then((res)=> res.json())\r\n            .then((messageData)=>{\r\n             setData(messageData);\r\n            }); \r\n            setLoading(true); \r\n\r\n\r\n\r\n        } catch (e) {\r\n\r\n            console.log(e);\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n    useEffect(() => {\r\n        getCustomer()\r\n      }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n        {loading?(\r\n            <div className=\"d-flex align-items-center customer-page \">\r\n                <ul className=\"list-group p-3 mx-auto text-center\" >\r\n                    <li className=\"list-group-item text-center\" >\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"col-auto\">\r\n\r\n                            <div className=\"d-flex justify-content-center align-items-center font-weight-bold  \">\r\n                                <div  className=\"h2 text-center box text-uppercase\" >Customers</div>\r\n                            </div>\r\n                                <div className=\"mt-3  d-flex justify-content-center align-items-center \">\r\n\r\n                                    <table className=\"col table \" >\r\n                                        <thead>\r\n                                            <tr>\r\n\r\n                                                <th scope=\"col\">Name</th>\r\n                                                <th scope=\"col\">Phone</th>\r\n                                                <th scope=\"col\">Email</th>\r\n                                                <th scope=\"col\">Account No</th>\r\n                                                <th scope=\"col\">Ifsc No</th>\r\n                                                <th scope=\"col\">Account Balance</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n\r\n                                            {data?.map(data => (\r\n                                                <tr>\r\n\r\n                                                    <td data-title=\"NAME\" >{data.name}</td>\r\n                                                    <td data-title=\"PHONE\">{data.phone}</td>\r\n                                                    <td data-title=\"EMAIL\">{data.email}</td>\r\n                                                    <td data-title=\"ACCOUNT NO\" >{data.accountno}</td>\r\n                                                    <td data-title=\"IFSC NO\">{data.ifscno}</td>\r\n                                                    <td data-title=\"ACCOUNT BALANCE\">{data.accountbalance}</td>\r\n\r\n                                                </tr>\r\n                                            ))}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n      \r\n      \r\n               \r\n\r\n            </div>\r\n            ):(<Loading/>)}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Customer\r\n","import React, { useState, useEffect } from 'react'\r\nimport Loading from './Loading';\r\n\r\n\r\nconst Transaction = () => {\r\n    const [data,setData]=useState();\r\n    const [loading,setLoading]=useState(false);\r\n    \r\n  const getTransactions=async()=>\r\n  {\r\n    try {\r\n        const res = await fetch('/transaction', { \r\n            method:'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept':'application/json'\r\n               }\r\n          \r\n        }).then((res)=> res.json())\r\n         .then((transactions)=>{\r\n          setData(transactions);\r\n         }); \r\n         setLoading(true); \r\n        \r\n         \r\n       } catch (e) {\r\n        \r\n        console.log(e);}\r\n      \r\n  }\r\n  useEffect(() => {\r\n    getTransactions()\r\n  \r\n  \r\n  },5000, [])\r\n  const formatDate = date => {\r\n    const options = {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      timeZone: 'Asia/Kolkata',\r\n      hour12: true,\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n    }\r\n    return new Date(date).toLocaleString('en-US', options)\r\n  }\r\n  return (\r\n    <>\r\n   {loading?(\r\n     \r\n    <div className=\"d-flex align-items-center transaction-page \">\r\n    <ul className=\"list-group p-3 mx-auto text-center\" >\r\n        <li className=\"list-group-item text-center\" >\r\n            <div className=\"row\">\r\n                <div className=\"col-auto\">\r\n                <div className=\"d-flex justify-content-center align-items-center font-weight-bold  \">\r\n                    <div  className=\"h2 text-center box text-uppercase\" >Transactions</div>\r\n                </div>\r\n                    <div className=\"mt-3  d-flex justify-content-center align-items-center \">\r\n\r\n      \r\n        <table>\r\n          <thead>\r\n            <tr className='transaction'>\r\n              <th className='TFrom'>FROM</th>\r\n              <th className='TTO'>TO</th>\r\n              <th className='TAmount'>AMOUNT</th>\r\n              <th className='TDate'>DATE</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data?.map(item => (\r\n              <tr key={item._id} className='transaction'>\r\n                <td className='TFrom'>{item.from.name}</td>\r\n                <td className='TTO'>{item.to.name}</td>\r\n                <td className='TAmount'>{item.amount}</td>\r\n                <td className='TDate'>{formatDate(item.date)}</td>\r\n              </tr>\r\n            ))}\r\n            </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            ):(<Loading/>)}\r\n       \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Transaction\r\n","import React from 'react'\nimport Navbar from './components/Navbar'\nimport Home from './components/Home'\nimport {Route} from 'react-router-dom'\nimport Transfer from './components/Transfer'\nimport Customer from './components/Customer'\nimport Transactions from './components/Transaction'\n\nconst App = () => {\n  return (\n    <>\n     <Navbar/>\n     <Route exact path=\"/\">\n     <Home/>\n     </Route>\n     <Route path=\"/customer\">\n     <Customer/>\n     </Route>\n     <Route path=\"/transaction\">\n     <Transactions/>\n     </Route>\n     <Route path=\"/transfer\">\n     <Transfer/>\n     </Route>\n     \n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}